:root {
  --clr-neutral-100: white;
  --clr-neutral-300: #eaeaea;
  --clr-neutral-900: black;
  --clr-primary-400: red;
  --clr-secondary-400: orange;
  
  --fs-100: 0.354rem;
  --fs-200: 0.5rem;
  --fs-300: 0.707rem;
  --fs-400: 1rem;
  --fs-500: 1.414rem;
  --fs-600: 1.999rem;
  --fs-700: 2.827rem;
  --fs-800: 3.998rem;
  --fs-900: 5.653rem;
  
  --ff-body: Avenir, Montserrat, Corbel, 'URW Gothic', source-sans-pro, sans-serif;
  --ff-heading: Bahnschrift, 'DIN Alternate', 'Franklin Gothic Medium', 'Nimbus Sans Narrow', sans-serif-condensed, sans-serif;
  --ff-heading-xl: Rockwell, 'Rockwell Nova', 'Roboto Slab', 'DejaVu Serif', 'Sitka Small', serif;
  --fs-cursive: 'Segoe Print', 'Bradley Hand', Chilanka, TSCu_Comic, casual, cursive;
}

*,
:after,
:before {
  -webkit-box-sizing: border-box;
  box-sizing: border-box
}

html {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

body {
  --text-color: var(--clr-neutral-900);
  --text-font-size: var(--fs-400);
  
  color: var(--text-color);
  font-size: var(--text-font-size);
  font-family: var(--ff-body);
  
  counter-reset: section -1;
  
  margin: 0 .5rem;
}

fieldset {
  --banner-font-size: var(--fs-700);
  --banner-width: calc(var(--banner-font-size) * 1.25);
  
  --cutoff-gap: 2px;
  --cutoff-width: var(--text-font-size);
  --block-cutoff-width: calc(var(--cutoff-width) / 2);
  
  --gap: 2rem;
  
  border: none;
  
  width: 40%; /* FIXME: not too fond of this way to limit the form's width (and it's doesn't work well on small devices) */
  margin-left: var(--banner-width);
  
  padding-block: var(--gap) 0;
  padding-inline: calc(var(--cutoff-gap) + var(--block-cutoff-width)*2); /* inline padding to make room for the "block cutoff" */
  min-height: 100vh;
  
  position: relative;
  display: grid;
  grid-auto-flow: row;
  align-content: start;
  
  counter-increment: section;
}

legend {
  position: absolute;
  display: grid;
  grid-auto-flow: column;
  place-content: center right;
  
  color: var(--clr-neutral-100);
  font-family: var(--ff-heading);
  font-size: var(--banner-font-size);
  text-transform: uppercase;
  
  padding-inline-end: var(--gap);
  background: var(--clr-primary-400);

  writing-mode: vertical-lr;
  text-align: end;
  text-orientation: mixed;
  transform: rotateZ(180deg);
  
  left: calc(-1 * var(--banner-width));
  top: 0;
  bottom: 0;
  
  width: var(--banner-width);
  
  &::before {
    content: counter(section) "_";
  }
}

.slanted-button {
  --border-margin-top: 0%;
  --cutoff-width: .75em;

  background-color: var(--clr-primary-400);
  color: var(--clr-neutral-100);
  border: none;
  
  display: inline-block;
  width: auto;
  padding: .5em 1em;
  
  font-family: var(--ff-heading);
  font-size: var(--fs-400);
  font-weight: 500;
  
  /* slanted shape */
  clip-path: polygon(
    0% var(--border-margin-top),
    calc(100% - var(--cutoff-width)) var(--border-margin-top),
    100% calc(var(--cutoff-width) + var(--border-margin-top)),
    100% 100%,
    var(--cutoff-width) 100%,
    0% calc(100% - var(--cutoff-width))
  );
}

.table-button {
  justify-self: right;
  margin-top: calc(var(--gap) / 4);
}

input[type="submit"] {
  margin-top: calc(var(--gap) * 2);
  place-self: center stretch;
}

.field {
  --label-height: calc(1.5 * var(--text-font-size));
  --border-width: 3px;
  --border-margin-top: var(--label-height);
  
  display: grid;
  grid-template-rows: var(--label-height) calc(2.5 * var(--label-height));
  
  margin-bottom: var(--gap);
  
  position: relative;
  isolation: isolate;
  
  font-size: var(--text-font-size);
  
  & label {
    display: block;
    color: var(--clr-primary-400);
    background-color: transparent;
    
    place-self: start left;
  }
  
  & input {
    --text-font-size: var(--fs-600);
    font-size: var(--text-font-size);
    font-family: var(--fs-cursive);
    
    width: calc(100% - var(--cutoff-width)*2);
    margin: calc(var(--cutoff-width) / 2) var(--cutoff-width);
    
    border: none;
    
    place-self: stretch left;
    
    &:focus-visible {
      border: none;
      outline: none;
    }
  }
  
  /* outer slanted background (red) */
  &::before {
    position: absolute;
    content: '';
    display: block;
    z-index: -2;
    
    inset: 0;
    background: var(--clr-primary-400);
    
    /* slanted shape */
    clip-path: polygon(
      0% var(--border-margin-top),
      calc(100% - var(--cutoff-width)) var(--border-margin-top),
      100% calc(var(--cutoff-width) + var(--border-margin-top)),
      100% 100%,
      var(--cutoff-width) 100%,
      0% calc(100% - var(--cutoff-width))
    );
  }
  
  /* inner slanted background (white) */
  &::after {
    --cutoff-width: calc(var(--text-font-size) - (var(--border-width) / 2)); /* smaller cutoff to make up for the border width */
    
    position: absolute;
    content: '';
    display: block;
    z-index: -1;
    
    inset: var(--border-width);
    background: var(--clr-neutral-100);
    
    /* slanted shape */
    clip-path: polygon(
      0% var(--border-margin-top),
      calc(100% - var(--cutoff-width)) var(--border-margin-top),
      100% calc(var(--cutoff-width) + var(--border-margin-top)),
      100% 100%,
      var(--cutoff-width) 100%,
      0% calc(100% - var(--cutoff-width))
    );
  }
  
  &:has(input[required]) label::after {
    position: absolute;
    content: '';
    
    top: var(--border-margin-top);
    right: 0;
    width: var(--cutoff-width);
    aspect-ratio: 1;
    
    background-color: var(--clr-primary-400);
    clip-path: polygon(var(--cutoff-gap) 0, 100% 0%, 100% calc(100% - var(--cutoff-gap)));
  }
  
  &:has(input:focus-visible) label::before {
    position: absolute;
    content: '';
    
    top: var(--border-margin-top);
    bottom: 0;
    left: calc(-1 * var(--block-cutoff-width) - var(--cutoff-gap));
    width: calc(var(--cutoff-width) * 2);
    
    background-color: var(--clr-primary-400);
    clip-path: polygon(0 0, 
                       var(--block-cutoff-width) 0,
                       var(--block-cutoff-width) calc(100% - var(--cutoff-width)),
                       calc(100% - calc(3 * var(--border-width))) 100%, /* the x3 multiplier is a magic number found by trial and error */
                       0 100%);
  }
  
  /* reducing the width to make up for the controls of a carousel, if any */
  &:has(.options-carousel) {
    --arrow-cutoff-width: calc(2 * var(--block-cutoff-width));
    margin-inline: calc(var(--arrow-cutoff-width) + var(--block-cutoff-width));
  }
  
  /* reducing the negative space with the table that follows, if any */
  &:has( + .options-table) {
    margin-bottom: calc(var(--gap) / 4);
  }
  
  & .options-carousel {
    margin: 0;
    padding: 0;
    
    display: contents;
  }
  
  /* TODO: grey out the buttons and color them when the field is focused or hovered */
  /* TODO: allow keyboard navigation through the options */
  
  & .options-carousel button {
    position: absolute;
    border: none;
    
    background-color: var(--clr-primary-400);
    
    top: var(--border-margin-top);
    bottom: 0;
    
    --button-width: calc((2 * var(--arrow-cutoff-width)) + var(--cutoff-width));
    width: var(--button-width);
  }
  
  & .options-carousel button:active {
    background-color: var(--clr-secondary-400);
  }
  
  & .options-carousel button.back {
    left: calc((-1 * var(--button-width)) - var(--cutoff-gap) + var(--cutoff-width));
    
    clip-path: polygon(
      0 50%,
      var(--arrow-cutoff-width) 0,
      calc(var(--arrow-cutoff-width) + var(--cutoff-width)) 0,
      calc(var(--arrow-cutoff-width) + var(--cutoff-width)) calc(100% - var(--cutoff-width)),
      calc(100% - calc(.5 * var(--border-width))) 100%,
      var(--arrow-cutoff-width) 100%
    );

  }
  
  & .options-carousel button.forward {
    right: calc((-1 * var(--arrow-cutoff-width)) - var(--cutoff-gap) - var(--cutoff-width));
    
    clip-path: polygon(
      0% 0%,
      calc(var(--arrow-cutoff-width) + var(--cutoff-width)) 0%,
      100% 50%,
      calc(var(--arrow-cutoff-width) + var(--cutoff-width)) 100%,
      var(--cutoff-width) 100%,
      var(--cutoff-width) var(--cutoff-width)
    );
  }
}

.options-table {
  display: grid;
  
  & table {
    border: 1px solid var(--clr-primary-400);
    border-collapse: collapse;
    text-align: center;
  }
  
  & thead {
    background-color: var(--clr-primary-400);
    color: var(--clr-neutral-100);
  }
  
  & thead th {
    border-right-color: var(--clr-neutral-100);
  }
  
  & tr:nth-of-type(even) * {
    background-color: var(--clr-neutral-300);
  }
  
  & tr[data-options-table-target='option'] {
    cursor: pointer;
  }
  
  & tr[data-options-table-target='option']:is(.selected, :hover) {
    outline: 3px solid var(--clr-secondary-400);
    outline-left-width: 6px;
  }
  
  & th {
    border-inline: 1px solid var(--clr-primary-400);
  }
  
  & :is(th, td) {
    padding-block: .35em;
  }
}

