:root {
  --clr-neutral-100: white;
  --clr-neutral-300: #eaeaea;
  --clr-neutral-900: black;
  --clr-primary-400: red;
  --clr-secondary-400: orange;
  
  --fs-100: 0.354rem;
  --fs-200: 0.5rem;
  --fs-300: 0.707rem;
  --fs-400: 1rem;
  --fs-500: 1.414rem;
  --fs-600: 1.999rem;
  --fs-700: 2.827rem;
  --fs-800: 3.998rem;
  --fs-900: 5.653rem;
  
  --ff-body: Avenir, Montserrat, Corbel, 'URW Gothic', source-sans-pro, sans-serif;
  --ff-heading: Bahnschrift, 'DIN Alternate', 'Franklin Gothic Medium', 'Nimbus Sans Narrow', sans-serif-condensed, sans-serif;
  --ff-heading-xl: Rockwell, 'Rockwell Nova', 'Roboto Slab', 'DejaVu Serif', 'Sitka Small', serif;
  --fs-cursive: 'Segoe Print', 'Bradley Hand', Chilanka, TSCu_Comic, casual, cursive;
}

*,
:after,
:before {
  -webkit-box-sizing: border-box;
  box-sizing: border-box
}

html {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

body {
  --text-color: var(--clr-neutral-900);
  --text-font-size: var(--fs-400);
  
  color: var(--text-color);
  font-size: var(--text-font-size);
  font-family: var(--ff-body);
  
  counter-reset: section -1;
  
  margin: 0 .5rem;
}

form {
  container-type: inline-size;
}

fieldset.lifepath_entry {
  --banner-font-size: var(--fs-700);
  --banner-width: calc(var(--banner-font-size) * 1.25);
  
  --cutoff-gap: 2px;
  --cutoff-width: var(--text-font-size);
  --block-cutoff-width: calc(var(--cutoff-width) / 2);
  
  --gap: 2rem;
  --label-height: calc(1.5 * var(--text-font-size));
  
  position: relative;
  
  border: none;
  padding: var(--gap) 0 0 0;
  
  min-height: 100vh;
  
  display: grid;
  grid-auto-flow: row;
  grid-template-columns: [banner] var(--banner-width) [main] 1fr [aside] 1fr [end];
  row-gap: var(--gap); /* TODO: 0 when on 2 column? */
  column-gap: calc(var(--gap) / 2);
  align-content: start;
  align-items: start;
  
  counter-increment: section;
  
  @container (width < 70ch) {
    grid-template-columns: [banner] var(--banner-width) [main] 1fr [aside end];
  }
}

i {
  font-size: var(--fs-300);
}

legend {
  position: absolute;
  grid-column: banner / main;
  inset: 0; /* relative to the containing grid cell, which is pretty cool */
  
  display: grid;
  grid-auto-flow: column;
  place-content: center right;
  
  color: var(--clr-neutral-100);
  font-family: var(--ff-heading);
  font-size: var(--banner-font-size);
  text-transform: uppercase;
  
  padding-inline-end: var(--gap); /* making up for the fieldset's top padding */
  background: var(--clr-primary-400);

  writing-mode: vertical-lr;
  text-align: end;
  text-orientation: mixed;
  transform: rotateZ(180deg);
  
  &::before {
    content: counter(section) "_";
  }
}

.slanted-button {
  --border-margin-top: 0%;
  --cutoff-width: .75em;

  background-color: var(--clr-primary-400);
  color: var(--clr-neutral-100);
  border: none;
  
  display: inline-block;
  width: auto;
  padding: .5em 1em;
  
  font-family: var(--ff-heading);
  font-size: var(--fs-400);
  font-weight: 500;
  
  /* slanted shape */
  clip-path: polygon(
    0% var(--border-margin-top),
    calc(100% - var(--cutoff-width)) var(--border-margin-top),
    100% calc(var(--cutoff-width) + var(--border-margin-top)),
    100% 100%,
    var(--cutoff-width) 100%,
    0% calc(100% - var(--cutoff-width))
  );
}

.next {
  margin-top: calc(var(--label-height)*2);
  margin-bottom: calc(var(--label-height)*4);
  
  grid-column: main / aside;
}


.field {
  --border-width: 3px;
  --border-margin-top: var(--label-height);
  
  grid-column: main / aside;
  
  position: relative;
  isolation: isolate;
  
  font-size: var(--text-font-size);
  
  & label {
    display: block;
    min-height: var(--label-height);
    color: var(--clr-primary-400);
    
    place-self: center left;
  }
  
  /* form-sizing: normal; */
  & input {
    --text-font-size: var(--fs-600);
    font-size: var(--text-font-size);
    font-family: var(--fs-cursive);
    
    width: calc(100% - var(--cutoff-width)*2);
    margin: calc(var(--cutoff-width) / 2) var(--cutoff-width);
    
    border: none;
    
    place-self: stretch left;
    
    &:focus-visible {
      border: none;
      outline: none;
    }
  }
  
  /* "secondary" are indented and placed closer to their primary relative */
  &.secondary {
    margin-top: calc(-.75 * var(--gap));
    margin-left: calc(3 * var(--block-cutoff-width));
  }
}

.field-indicators {
  position: relative;
  z-index: 1;
  align-self: start;
  
  &:has(input:focus-visible)::before {
    position: absolute;
    content: '';
    
    top: 0;
    bottom: 0;
    left: calc(-1 * var(--block-cutoff-width) - var(--cutoff-gap));
    width: calc(var(--cutoff-width) + var(--block-cutoff-width));
    
    background-color: var(--clr-primary-400);
    clip-path: polygon(
      0 0, 
      var(--block-cutoff-width) 0,
      var(--block-cutoff-width) calc(100% - var(--cutoff-width)),
      calc(100% - var(--cutoff-gap)*0.414) 100%,
      0 100%
     );
  }
  
  &:has(input[required])::after {
    position: absolute;
    content: '';
    
    top: 0;
    right: 0;
    width: var(--cutoff-width);
    aspect-ratio: 1;
    
    background-color: var(--clr-primary-400);
    clip-path: polygon(
      var(--cutoff-gap) 0,
      100% 0%,
      100% calc(100% - var(--cutoff-gap))
    );
  }
}

.field-border {
  position: relative;
  height: 100%;

  /* outer slanted background (red) */
  &::before {
    position: absolute;
    content: '';
    display: block;
    z-index: -2;
    
    inset: 0;
    background: var(--clr-primary-400);
    
    /* slanted shape */
    clip-path: polygon(
      0% 0%,
      calc(100% - var(--cutoff-width)) 0%,
      100% var(--cutoff-width),
      100% 100%,
      var(--cutoff-width) 100%,
      0% calc(100% - var(--cutoff-width))
    );
  }
  
  /* inner slanted background (white) */
  &::after {
    /* 0.4142 */
    --cutoff-width: calc(var(--text-font-size) - (var(--border-width) / 2)); /* smaller cutoff to make up for the border width */
    
    position: absolute;
    content: '';
    display: block;
    z-index: -1;
    
    inset: var(--border-width);
    background: var(--clr-neutral-100);
    
    /* slanted shape */
    clip-path: polygon(
      0% 0%,
      calc(100% - var(--cutoff-width)) 0%,
      100% var(--cutoff-width),
      100% 100%,
      var(--cutoff-width) 100%,
      0% calc(100% - var(--cutoff-width))
    );
  }
}

.field[data-controller="options-carousel"] {
  /* making room on both ends for the buttons so that their tip aligns with the focus indicator */
  --arrow-cutoff-width: calc(2 * var(--block-cutoff-width));
  margin-inline: calc(var(--arrow-cutoff-width) + var(--block-cutoff-width));

  & button {
    position: absolute;
    border: none;
    
    background-color: var(--clr-primary-400);
    
    top: var(--border-margin-top);
    bottom: 0;
    
    --button-width: calc((2 * var(--arrow-cutoff-width)) + var(--cutoff-width));
    width: var(--button-width);
    
    &:active {
      background-color: var(--clr-secondary-400);
    }
  }
  
  & button.back {
    left: calc((-1 * var(--button-width)) - var(--cutoff-gap) + var(--cutoff-width));
    
    clip-path: polygon(
      0 50%,
      var(--arrow-cutoff-width) 0,
      calc(var(--arrow-cutoff-width) + var(--cutoff-width)) 0,
      calc(var(--arrow-cutoff-width) + var(--cutoff-width)) calc(100% - var(--cutoff-width)),
      calc(100% - calc(.5 * var(--border-width))) 100%,
      var(--arrow-cutoff-width) 100%
    );
  }
  
  & button.forward {
    right: calc((-1 * var(--arrow-cutoff-width)) - var(--cutoff-gap) - var(--cutoff-width));
    
    clip-path: polygon(
      0% 0%,
      calc(var(--arrow-cutoff-width) + var(--cutoff-width)) 0%,
      100% 50%,
      calc(var(--arrow-cutoff-width) + var(--cutoff-width)) 100%,
      var(--cutoff-width) 100%,
      var(--cutoff-width) var(--cutoff-width)
    );
  }
}

.field[data-controller="options-table"] {
  grid-column: main / end;
  
  display: grid;
  grid-auto-flow: row;
  grid-template-columns: subgrid;
  column-gap: var(--gap);
  
  & :not(table) {
    grid-column: main;
  }
  
  & table {
    --border: 1px solid var(--clr-primary-400);
    
    grid-column: aside;
    table-layout: fixed;
    
    width: 100%;
    border-collapse: collapse;
    text-align: center;
  }
  
  & thead {
    border: var(--border);
    background-color: var(--clr-primary-400);
    color: var(--clr-neutral-100);
  }
  
  & thead th:first-of-type {
    width: 8ch;
    border-right-color: var(--clr-neutral-100);
  }
  
  & tbody {
    border: var(--border);
  }
  
  & tfoot {
    border: none;
    border-top: var(--border);
    text-align: right;
  }
  
  & tr:nth-of-type(even) * {
    background-color: var(--clr-neutral-300);
  }
  
  & tr[data-options-table-target='option'] {
    cursor: pointer;
  }
  
  & tr[data-options-table-target='option']:is(.selected, :hover) {
    outline: 3px solid var(--clr-secondary-400);
    outline-left-width: 6px;
  }
  
  & th {
    border-inline: 1px solid var(--clr-primary-400);
  }
  
  & :is(th, td) {
    padding-block: .35em;
  }
  
  & tfoot td {
    padding-bottom: 0;
  }
}
